".source.js":
  "function apply":
    prefix: "apply"
    body: """
    apply(${1:this}, ${2:args})
    """
  "function call":
    prefix: "call"
    body: """
    call(${1:this}, ${2:args})
    """
  "function bind":
    prefix: "bind"
    body: """
    bind(${1:this}, ${2:args})
    """
  "prototype method":
    prefix: "proto"
    body: """
    ${1:Class}.prototype.${2:methodName} = function ${2:methodName}(${3:args}) {
    \t${0}
    };
    """
  "chain prototype method":
    prefix: ".proto"
    body: """
    .prototype.${2:methodName} = function ${2:methodName(${3:args}) {
    \t${0}
    }
    """

  "arrow function with body":
    prefix: "arrow"
    body: """
    (${1:args}) => {
    \t${0}
    }
    """
  "named generator":
    prefix: "generator"
    body: """
    function* ${1:name}(${2:args}) {
    \t${0}
    }
    """
  'function expression':
    'prefix': 'fe',
    'body': """
      var ${1:functionName} = function ${1:functionName}($2) {
        $3
      };
      """
  "immediately-invoked function expression":
    prefix: "iife"
    body: """
    (function (${1:args}) {
    \t${0}
    })(${2});
    """
